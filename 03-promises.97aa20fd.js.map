{"version":3,"sources":["js/03-promises.js"],"names":["refs","inputDelay","document","querySelector","inputStep","inputAmount","form","btn","handleBtnSubmit","e","preventDefault","amount","value","delay","baseStep","i","createPromise","then","position","console","log","catch","Promise","res","rej","setTimeout","Math","random","addEventListener"],"mappings":";AAAA,IAAMA,EAAO,CACXC,WAAYC,SAASC,cAAc,uBACnCC,UAAWF,SAASC,cAAc,sBAClCE,YAAaH,SAASC,cAAc,wBACpCG,KAAMJ,SAASC,cAAc,SAC7BI,IAAKL,SAASC,cAAc,WAGxBK,EAAkB,SAAAC,GACtBA,EAAEC,iBAKG,IAJCC,IAAAA,GAAUX,EAAKK,YAAYO,MAC3BC,GAASb,EAAKC,WAAWW,MACzBE,GAAYd,EAAKI,UAAUQ,MAExBG,EAAI,EAAGA,EAAIJ,EAAQI,IAC1BC,EAAcD,EAAI,EAAGF,EAAQC,EAAWC,GACrCE,KAAK,SAAyB,GAAtBC,IAAAA,EAAAA,EAAAA,SAAUL,EAAAA,EAAAA,MACjBM,QAAQC,IAA2BF,uBAAAA,OAAAA,EAAeL,QAAAA,OAAAA,EAAlD,SAEDQ,MAAM,SAAyB,GAAtBH,IAAAA,EAAAA,EAAAA,SAAUL,EAAAA,EAAAA,MAClBM,QAAQC,IAA0BF,sBAAAA,OAAAA,EAAeL,QAAAA,OAAAA,EAAjD,UAMR,SAASG,EAAcE,EAAUL,GACxB,OAAA,IAAIS,QAAQ,SAACC,EAAKC,GACvBC,WAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAI,CAAEL,SAAAA,EAAUL,MAAAA,IAEhBW,EAAI,CAAEN,SAAAA,EAAUL,MAAAA,KAEjBA,KAIPb,EAAKM,KAAKsB,iBAAiB,SAAUpB","file":"03-promises.97aa20fd.js","sourceRoot":"../src","sourcesContent":["const refs = {\n  inputDelay: document.querySelector('input[name=\"delay\"]'),\n  inputStep: document.querySelector('input[name=\"step\"]'),\n  inputAmount: document.querySelector('input[name=\"amount\"]'),\n  form: document.querySelector('.form'),\n  btn: document.querySelector('button'),\n};\n\nconst handleBtnSubmit = e => {\n  e.preventDefault();\n  const amount = +refs.inputAmount.value;\n  const delay = +refs.inputDelay.value;\n  const baseStep = +refs.inputStep.value;\n  // setTimeout(() => {\n  for (let i = 0; i < amount; i++) {\n    createPromise(i + 1, delay + baseStep * i)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n  // }, delay);\n};\n\nfunction createPromise(position, delay) {\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        res({ position, delay });\n      } else {\n        rej({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nrefs.form.addEventListener('submit', handleBtnSubmit);\n"]}